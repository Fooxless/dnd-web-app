import type { NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";
import MonsterCardGrid from "../components/cardgrid";
import Sorter from "../components/sortby";

import Search from "../components/searchbar";
import { useState } from "react";
import { useMonstersQuery } from "../front-end-api/hooks/hooks";
import { QueryStateIndicator } from "../front-end-api/reactQueryProvider";
import { Box, Pagination, Stack } from "@mui/material";
import { PageWrapper } from "../components/pagewrapper";
// import Filter from "../components/filterby";

const Home: NextPage = () => {
    const { data: session } = useSession();
    const [ordering, setSortby] = useState("");
    // const [filterby, setFilterby] = useState("");
    const [search, setSearchquery] = useState("");
    const [page, setPage] = useState(1);

    const { data: monstersQueryData, isLoading } = useMonstersQuery({
        ordering,
        page,
        search,
    });

    const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {
        setPage(value);
    };

    let pageCount;

    if (monstersQueryData?.count !== undefined)
        pageCount = Math.ceil(monstersQueryData?.count / 20);

    return (
        <PageWrapper>
            <Head>
                <title>DND Web App</title>
                <meta
                    name="This is a portfolio item for Connor Gryphon."
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Box sx={{ pb: 20, pt: 6 }}>
                <Box display="flex" justifyContent="center">
                    <Stack direction={"row"} spacing={2}>
                        <Search
                            setSearchquery={setSearchquery}
                            setPage={setPage}
                        />
                        <Sorter setSortby={setSortby} />
                        {/* <Filter setFilterby={setFilterby} /> */}
                    </Stack>
                </Box>
                <QueryStateIndicator isLoading={isLoading}>
                    <Stack>
                        <MonsterCardGrid
                            monsters={monstersQueryData?.results}
                        />
                        <Pagination
                            count={pageCount}
                            page={page}
                            onChange={handleChange}
                            sx={{
                                button: {
                                    color: "white",
                                    "&:hover": {
                                        backgroundColor: "rgb(25,118,210, 0.5)",
                                    },
                                },
                                alignSelf: "center",
                                display: "flex",
                                mt: 4,
                            }}
                            color="primary"
                        />
                    </Stack>
                </QueryStateIndicator>
            </Box>
        </PageWrapper>
    );
};

export default Home;
