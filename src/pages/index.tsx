import type { NextPage } from "next";
import Head from "next/head";
import { useSession, signIn, signOut } from "next-auth/react";
import Grid from "../components/cardgrid";
import Sorter from "../components/sortby";
import Filter from "../components/filterby";
import Search from "../components/searchbar";
import { useEffect, useState } from "react";
import { Pagination } from "@mui/material";
import { useMonstersQuery } from "../front-end-api/hooks/hooks";
import { QueryStateIndicator } from "../front-end-api/reactQueryProvider";

const Home: NextPage = () => {
    const { data: session } = useSession();
    const [ordering, setSortby] = useState("");
    // const [filterby, setFilterby] = useState("");
    const [search, setSearchquery] = useState("");
    const [page, setPage] = useState(1);
    console.log("search", search);
    const monstersQuery = useMonstersQuery({
        ordering,
        page,
        search,
    });

    console.log("monstersQuery", monstersQuery);

    return (
        <div className="page-container bg-[#1e293b]">
            <Head>
                <title>DND Web App</title>
                <meta
                    name="This is a portfolio item for Connor Gryphon."
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="text-white pb-20 pt-6 ">
                <div>
                    <div className="ml-20 relative sm:flex sm:ml-10 justify-center">
                        <Search
                            setSearchquery={setSearchquery}
                            setPage={setPage}
                        />
                        <div className="sm:ml-10 flex mt-6 sm:mt-0">
                            <Sorter setSortby={setSortby} />
                            {/* <Filter setSortby={setFilterby} /> */}
                        </div>
                    </div>
                    <QueryStateIndicator isLoading={monstersQuery.isLoading}>
                        <Grid monsters={monstersQuery?.data} />
                    </QueryStateIndicator>
                    {/* <Pagination page={page} setPage={setPage} count={monsters?.count} /> */}
                </div>
            </main>
        </div>
    );
};

export default Home;
